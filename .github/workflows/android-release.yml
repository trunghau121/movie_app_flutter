name: Analyze, Test and Build for Android

on:
  push:
    branches:
      - master

jobs:

  lint:
    name: Analyze the code
    runs-on: ubuntu-latest
    steps:
      - name: Clone flutter repository from stable channel with 3.13.9 version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.9'
          channel: 'stable'
          cache: true

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

  version:
    name: Create version number
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch all history for all tags and branches
        run: git fetch --unshallow --tags

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: '5.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10

      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt

      - name: Upload version.txt
        uses: actions/upload-artifact@v3
        with:
          name: gitversion
          path: version.txt

  build:
    name: Build apk
    needs: [ version ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
          cache: 'gradle'

      - name: Clone flutter repository from stable channel with 3.13.9 version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.9'
          channel: 'stable'
          cache: true

      - name: Get version.txt
        uses: actions/download-artifact@v3
        with:
          name: gitversion

      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt

      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt

      - name: Update version in YAML
        run: |
          sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
          VERSION_NAME="$(grep 'version:' pubspec.yaml | awk '{ print $2 }' | cut -d'+' -f 1)"
          VERSION_CODE="$(grep 'version:' pubspec.yaml | awk '{ print $2 }' | cut -d'+' -f 2)"
          echo $VERSION_NAME
          echo $VERSION_CODE

      - name: Update KeyStore password in gradle properties
        run: sed -i 's/#{KEYSTORE_PASS}#/${{ secrets.KEYSTORE_PASS }}/g' android/key.properties

      - name: Update KeyStore key password in gradle properties
        run: sed -i 's/#{KEYSTORE_KEY_PASS}#/${{ secrets.KEYSTORE_KEY_PASS }}/g' android/key.properties

      - name: Update key alias in gradle properties
        run: sed -i 's/#{KEY_ALIAS}#/${{ secrets.KEY_ALIAS }}/g' android/key.properties

      - name: Update dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk

      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          token: ${{ secrets.TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
          prerelease: false

      - name: Upload app apk
        uses: actions/upload-artifact@v3
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/app-release.apk

  firebase_distribution:
    name: Release app to firebase distribution
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get app apk from artifacts
        uses: actions/download-artifact@v3
        with:
          name: android-release

      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: app-release.apk
